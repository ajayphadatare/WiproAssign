
Task 5: Boyer-Moore Algorithm Application Use the Boyer-Moore algorithm to 
write a java program that finds the last occurrence of a substring in a given string and returns its index. 
Explain why this algorithm can outperform others in certain scenarios.



public class BoyerMooreLastOccurrence {

    private static int[] buildBadCharacterTable(String pattern) {
        int[] badCharTable = new int[256]; // assuming ASCII charset
        for (int i = 0; i < 256; i++) {
            badCharTable[i] = -1; // Initialize all occurrences as -1
        }
        for (int i = 0; i < pattern.length(); i++) {
            badCharTable[pattern.charAt(i)] = i; // Set the value for each character in the pattern
        }
        return badCharTable;
    }

    public static int findLastOccurrence(String text, String pattern) {
        int[] badCharTable = buildBadCharacterTable(pattern);
        int m = pattern.length();
        int n = text.length();
        
        int index = -1; // Initialize the index of last occurrence to -1

        int shift = 0; // Shift of the pattern with respect to text

        while (shift <= (n - m)) {
            int j = m - 1;

            // Keep reducing index j of pattern while characters of pattern and text are matching
            while (j >= 0 && pattern.charAt(j) == text.charAt(shift + j)) {
                j--;
            }

            // If the pattern is present at the current shift
            if (j < 0) {
                index = shift; // Update the last occurrence index
                shift += (shift + m < n) ? m - badCharTable[text.charAt(shift + m)] : 1;
            } else {
                // Shift the pattern so that the bad character in text aligns with the last occurrence of it in pattern
                shift += Math.max(1, j - badCharTable[text.charAt(shift + j)]);
            }
        }

        return index;
    }

    public static void main(String[] args) {
        String text = "abacaabadcabacabaabb";
        String pattern = "abacab";
        
        int lastIndex = findLastOccurrence(text, pattern);
        if (lastIndex == -1) {
            System.out.println("Pattern not found in the text.");
        } else {
            System.out.println("The last occurrence of the pattern is at index: " + lastIndex);
        }
    }
}



